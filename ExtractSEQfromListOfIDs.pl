## Script to extract sequences from a file in FASTA format: 1 line ">name", 1 line seq (such as screen_ file generated by HTtools), 
## and from a list of IDs (such as fil_multi_match_ file generated by HTtools)

## Note: requires Perl V5.10 or higher

## Developed by: Caroline Esnault

## Last update: 09/04/13



# list of variables
my $n = 0;
my @seq = ();   
my @temp1 = ();
my %IDhash = ();



# ask for the sequence file
print "fasta file (such as screen_ file generated by HTtools):";
chomp($fastafile = <STDIN>);

# ask for the "IDs to sreen out" file
print "File with list of IDs in 1st column (such as integration_ file generated by HTtools):";
chomp($idfile = <STDIN>);

# ask for the output file
print "Path and name of the output file:";
chomp($outfile = <STDIN>);
open OUTPUT, ">$outfile" or die "can't open '$outfile': $!"; #create the output file

print "Step 1: reading the files\n";
open (FASTQFILE, $fastqfile);
    while (<FASTQFILE>) {
        $seqline = $_;
        chomp $seqline;
        push @seq, "$seqline\n";
    }
close(FASTQFILE);

open(IDFILE, $idfile);
while (<IDFILE>) {
        $idline = $_;
        @temp1 = split /\t/, $idline;
        $IDhash{ "$temp1[0]" } = 0;                # the IDs are in the first column, which has the indice [0], using a hash is much faster!
    }
close(IDFILE);

# reads along the array with the fastq file, and when the line is an ID line, compare it with the list of IDs to exctract
$total = @seq;

foreach $temp2 (@seq) {
    chomp $temp2;
    print "Step 2: screening line $n / $total\n";
    if ($temp2 =~ m/>/) {       #is it an >ID line?
        $temp2 =~ s/>//;
        if (exists $IDhash{"$temp2"}) {   #does it matches one of the IDs from the list?
            chomp $seq[$n];
            chomp $seq[$n+1];
            print OUTPUT ">$seq[$n]\n";
            print OUTPUT "$seq[$n+1]\n";
        }
        
    }
    $n = $n+1; 
}


close OUTPUT;
